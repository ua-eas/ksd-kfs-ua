<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>edu.arizona</groupId>
    <artifactId>uaf-overlay</artifactId>
    <version>6.0.0</version>
    <name>KSD KFS UA ${project.version} Overlay</name>
    <description>Kuali Financial System</description>
    <packaging>war</packaging>
    <prerequisites>
        <maven>${required.maven.version}</maven>
    </prerequisites>
    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <kuali.rice.version>2.1.9</kuali.rice.version>
        <kuali.kfs.version>6.0.0</kuali.kfs.version>

        <!-- maven version check properties -->
        <required.maven.version>3.0</required.maven.version>
        <enforcer.phase>validate</enforcer.phase>
        
        <!-- directory where test runtime config properties can be found -->
        <test.properties.dir>/home/rbtucker/work/unit-test-config</test.properties.dir>
        <source.war.classes.extract.dir>target/war/work/org.kuali.kfs/kfs/WEB-INF/classes</source.war.classes.extract.dir>
        
        <uaf.build.number>1</uaf.build.number>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-api</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-framework</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-impl</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-service-api</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-service-framework</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-service-impl</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-service-web</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-core-web</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-impl</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.servlet.jsp</groupId>
                    <artifactId>jsp-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kew-api</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kew-impl</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kew-framework</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kim-api</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kim-framework</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kim-impl</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kns</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-krad-app-framework</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-krad-web-framework</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-ksb-api</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-ksb-client-impl</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-krms-impl</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-ksb-server-impl</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-ksb-web</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-location-api</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-location-framework</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-location-impl</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-location-web</artifactId>
            <version>${kuali.rice.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-impl</artifactId>
            <version>${kuali.rice.version}</version>
            <classifier>ua</classifier>
        </dependency>
        <dependency>
            <groupId>org.kuali.rice</groupId>
            <artifactId>rice-kim-ldap</artifactId>
            <version>${kuali.rice.version}</version>
            <classifier>ua</classifier>
        </dependency>
        <dependency>
            <groupId>org.kuali.kfs</groupId>
            <artifactId>kfs-ar</artifactId>
            <version>${kuali.kfs.version}</version>
            <scope>provided</scope>
        </dependency>     
        <dependency>
            <groupId>org.kuali.kfs</groupId>
            <artifactId>kfs-bc</artifactId>
            <version>${kuali.kfs.version}</version>
            <scope>provided</scope>
        </dependency>     
        <dependency>
            <groupId>org.kuali.kfs</groupId>
            <artifactId>kfs-cam</artifactId>
            <version>${kuali.kfs.version}</version>
            <scope>provided</scope>
        </dependency>     
        <dependency>
            <groupId>org.kuali.kfs</groupId>
            <artifactId>kfs-cg</artifactId>
            <version>${kuali.kfs.version}</version>
            <scope>provided</scope>
        </dependency>     
        <dependency>
            <groupId>org.kuali.kfs</groupId>
            <artifactId>kfs-core</artifactId>
            <version>${kuali.kfs.version}</version>
            <scope>provided</scope>
        </dependency>     
        <dependency>
            <groupId>org.kuali.kfs</groupId>
            <artifactId>kfs-ec</artifactId>
            <version>${kuali.kfs.version}</version>
            <scope>provided</scope>
        </dependency>     
        <dependency>
            <groupId>org.kuali.kfs</groupId>
            <artifactId>kfs-kc</artifactId>
            <version>${kuali.kfs.version}</version>
            <scope>provided</scope>
        </dependency>     
        <dependency>
            <groupId>org.kuali.kfs</groupId>
            <artifactId>kfs-ld</artifactId>
            <version>${kuali.kfs.version}</version>
            <scope>provided</scope>
        </dependency>     
        <dependency>
            <groupId>org.kuali.kfs</groupId>
            <artifactId>kfs-purap</artifactId>
            <version>${kuali.kfs.version}</version>
            <scope>provided</scope>
        </dependency>     
        <dependency>
            <groupId>org.kuali.kfs</groupId>
            <artifactId>kfs-tem</artifactId>
            <version>${kuali.kfs.version}</version>
            <scope>provided</scope>
        </dependency>     
        <dependency>
            <groupId>org.kuali.kfs</groupId>
            <artifactId>kfs-web</artifactId>
            <version>${kuali.kfs.version}</version>
            <type>war</type>
        </dependency>        
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc6</artifactId>
            <version>11.2.0.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>1.18.1</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>org.kuali.kfs</groupId>
            <artifactId>kfs-core</artifactId>
            <version>${kuali.kfs.version}</version>
            <classifier>tests</classifier>
        </dependency>        
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-javamail_1.4_spec</artifactId>
            <version>1.7.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
            <version>3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm-tree</artifactId>
            <version>3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>cobertura</groupId>
            <artifactId>cobertura</artifactId>
            <version>1.8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.resource</groupId>
            <artifactId>connector-api</artifactId>
            <version>1.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <version>6.1.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>7.0.0.pre5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-core</artifactId>
            <version>1.52.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
            <version>5.6.1</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>2.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>kfs-default-config.properties</include>
                </includes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>kfs-default-config.properties</exclude>
                </excludes>
            </testResource>
        </testResources>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <!-- kfs puts these resource under WEB-INF, by default they
                    would end up in WEB-INF/classes so we will exclude them here -->                    
                    <exclude>configuration-examples/**</exclude>
                    <exclude>configuration-templates/**</exclude>
                    <exclude>docker/**</exclude>
                    <exclude>jsp/**</exclude>
                    <exclude>tags/**</exclude>
                    <exclude>tld/**</exclude>
                    <exclude>tlds/**</exclude>
                    <exclude>META-INF/**</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    <execution>
                        <id>default-install</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>default-war</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>war-exploded</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                        <configuration>
                            <webappDirectory>target/docker/kfs-build/kfs</webappDirectory>
                            <!-- exclude some jars we do not need or that have an old version being pulled 
                            in for some reason - the rice jars are overridden with ua-specific versions -->
                            <dependentWarExcludes>**/rice-impl-2.1.9.jar,**/commons-beanutils-1.7.0.jar</dependentWarExcludes>
                            <overlays>
                                <overlay>
                                    <groupId>org.kuali.kfs</groupId>
                                    <artifactId>kfs-web</artifactId>
                                    <skip>${skip.overlay.extract}</skip>
                                </overlay>
                            </overlays>
                            <!-- kfs puts these resource under WEB-INF, by default they
                            end up in WEB-INF/classes so we handle this here -->
                            <webResources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <!-- override the destination directory for this resource -->
                                    <targetPath>WEB-INF</targetPath>
                                    <excludes>
                                        <exclude>configuration-examples/**</exclude>
                                        <exclude>docker/**</exclude>
                                        <exclude>aws/**</exclude>
                                        <exclude>*.xml</exclude>
                                    </excludes>
                                </resource>
                            </webResources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>        
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.0.21</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <pushImage>${push.docker.image}</pushImage>
                            <imageName>uaksd/kuali-applications:ksd-uaf-${project.version}-build${uaf.build.number}</imageName>
                            <dockerDirectory>${project.basedir}/src/main/resources/docker</dockerDirectory>
                            <skipDockerBuild>${skip.docker.build}</skipDockerBuild>
                            <resources>
                                <resource>
                                    <targetPath>/scripts/usr/local/bin</targetPath>
                                    <directory>${project.basedir}/src/main/resources/docker/scripts</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>     
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <systemPropertyVariables>
                                <additional.kfs.config.locations>${test.properties.dir}/uaf-security-config.properties,${test.properties.dir}/uaf-rice-config.properties,${test.properties.dir}/uaf-kfs-config.properties</additional.kfs.config.locations>
                            </systemPropertyVariables>
                            <argLine>-Xms1024m -Xmx1024m</argLine>
                            <skipTests>${skip.tests}</skipTests>
                            <classesDirectory>target/docker/kfs-build/kfs/WEB-INF/classes</classesDirectory>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${project.basedir}/src/test/resources</additionalClasspathElement>
                            </additionalClasspathElements>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>unpack-foundation-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <verbose>true</verbose>
                            <skip>${skip.tests}</skip>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.kuali.kfs</groupId>
                                    <artifactId>foundation-tests</artifactId>
                                    <version>${project.version}</version>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>target/test-classess</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
            the plugin below will autostart the oracle test database but it runs as a daemeon and
            the db is not fully up before tests start trying to access it -->
            <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>docker</executable>
                    <commandlineArgs>-H tcp://127.0.0.1:2375 run -d -p 49160:22 -p 49161:1521 -p 49162:8080 rbtucker/kfs-test-database:base</commandlineArgs>
                </configuration>
            </plugin>        
            -->
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>local-init-profile</id>
            <properties>
                <!-- unit/integration tests flag -->
                <skip.tests>true</skip.tests>
                <!-- flag to skip overlay source war extract -->
                <skip.overlay.extract>false</skip.overlay.extract>
                <!-- docker image config/setup flags -->
                <push.docker.image>false</push.docker.image>
                <skip.docker.build>true</skip.docker.build>
            </properties>
        </profile>
        <profile>
            <id>local-profile</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- unit/integration tests flag -->
                <skip.tests>true</skip.tests>
                <!-- flag to skip overlay source war extract -->
                <skip.overlay.extract>true</skip.overlay.extract>
                <!-- docker image config/setup flags -->
                <push.docker.image>false</push.docker.image>
                <skip.docker.build>true</skip.docker.build>
            </properties>
        </profile>
        <profile>
            <id>release-with-tests-profile</id>
            <properties>
                <!-- unit/integration tests flag -->
                <skip.tests>false</skip.tests>
                <!-- flag to skip overlay source war extract -->
                <skip.overlay.extract>false</skip.overlay.extract>
                <!-- docker image config/setup flags -->
                <push.docker.image>false</push.docker.image>
                <skip.docker.build>false</skip.docker.build>
            </properties>
        </profile>
        <profile>
            <id>release-profile</id>
            <properties>
                <!-- unit/integration tests flag -->
                <skip.tests>true</skip.tests>
                <!-- flag to skip overlay source war extract -->
                <skip.overlay.extract>false</skip.overlay.extract>
                <!-- docker image config/setup flags -->
                <push.docker.image>false</push.docker.image>
                <skip.docker.build>false</skip.docker.build>
            </properties>
        </profile>
        <profile>
            <id>release-with-dochub-push-profile</id>
            <properties>
                <!-- unit/integration tests flag -->
                <skip.tests>true</skip.tests>
                <!-- flag to skip overlay source war extract -->
                <skip.overlay.extract>false</skip.overlay.extract>
                <!-- docker image config/setup flags -->
                <push.docker.image>true</push.docker.image>
                <skip.docker.build>false</skip.docker.build>
            </properties>
        </profile>
    </profiles>
</project>